!!!
%html{:xmlns=>"http://www.w3.org/1999/xhtml", "xml:lang"=>"en", :lang=>"en"}
  %head
    %meta{"http-equiv"=>"Content-Type", :content=>"text/html; charset=utf-8"}
    %title FancyPants
    %link{:rel=>"stylesheet", :type=>"text/css", :href=>"/stylesheets/style.css", :media=>"screen"}
  %body
    #wrapper
      #top-bar
        #top-bar-inner
          #logo
            FancyPants
          .tagline
            is a theme.
          #nav
            %a{:href=>"/"} Home
            %a{:href=>"#"} About
            %a{:href=>"#"} Contact
      #content
        .tagline
          %h1 Hello there, my friend.
          %br
          %h2 Welcome to FancyPants
          %p 
            A RoR theme in Sass by 
            %a{:href=>"#"} robertjwhitney
        #left
          .block
            %img{:src=>"/images/deep-sea-diver.jpg"}
        #right
          .block
            %h1 
              All your styles are belonging to 
              %span.italic
                you.
            %p
              If you're here, I'm guessing you're probably like me:  You build or design sites and apps by the dozen, on a very demanding schedule, and the frameworks of the world just feel like a lot of extra baggage you don't want. 
            %p  
              Don't worry, I understand- I've looked at a lot of them and it gets frustrating when you want speed, but have to deal with configuring someone elses huge bulk of code, especially the first few times.  Then you're stuck with all that bloat you never use.  There are a lot of them out there, with a lot of different concepts and goals, and most probably aren't for you.  In fact, chances are 
              %span.italic
                this 
              theme isn't for you either.
            %p
              So, before we go any further, here's who FancyPants is probably best suited for:
            %ul
              %li
                %a{:href=>"http://rubyonrails.org/"}
                  Ruby on Rails
                and other
                %a{:href=>"http://www.ruby-lang.org/"}
                  Ruby 
                Framework Developers
              %li
                Those familiar with 
                %a{:href=>"http://haml-lang.com/"}
                  Haml/Sass
              %li
                Deep Sea Divers
              %li
                Yours truly
            %p
              If you're new to CSS or Sass, or just don't have much experience with either, and are planning to use FancyPants to get you off the ground, I suggest you
              %span.bold 
                stop here.
              Take the time to 
              %a{:href=>"http://www.w3schools.com/CSS/"}
                learn how 
              to do it right before you get attached to someone else's system.  FancyPants is new, un-tested, and a learning experience for me also.
          .block
            %h1
              What it's all about
            %p
              FancyPants is a new
              %span.italic
                theme
              with a few modest goals.  
            %p
              Allow me to digress to point out the use of the word "theme," as opposed to the the more commonly seen "framework."  FancyPants is not really intended as a framework, it's just a starting point.  CSS works as part of a web page's semantic mark-up, so the idea of creating a true framework seems to me to be both flawed and cumbersome.  FancyPants wants to add value to your workflow, by letting you get some simple things out of the way quickly.  It doesn't aim to solve all the problems you'll face.  Other than that being impossible, figuring it out for yourself is part of the fun!
            %p
              Aside from compatibility, and accessibility, the main goals of FancyPants are:
              %ul
                %li
                  Ease
                %li
                  Simplicity
                %li
                  Repeatability
                %li
                  Speed
            %p
              You'll notice a common idea in that list: speed.  Where most frameworks favor grid systems, alternate style sheets, various column settings, and an endless amount of configurable options and extras, the FancyPants theme does not. Like Rails, it aims for convention over configuration. 
            %p
              Sure you can go ahead and customize any element however you want, and the goal is to make that easy, but the plan is to steer clear of loading it with configurable "features." First, because I have found most of them to be more of a pain than they are worth.  Any sort of scaffold you use should not have "features," it should get you quickly on your way to creating your own. Second, because there are plenty of other
              %a{:href=>"http://www.noupe.com/css/5-popular-css-frameworks-tutorials-tools-for-getting-started.html"} 
                great options 
              out there if that's the kind of thing you are after.
            %p
              That said, the intention is to get you started quickly, and then get out of your way when you need it to.
      #footer
        